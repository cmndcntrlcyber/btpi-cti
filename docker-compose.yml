version: '3.8'

networks:
  default:
    external: true
    name: ${NETWORK}

volumes:
  db_data: # GRR MySQL data
  client_installers: # GRR client installers
  client_state: # GRR client state
  cassandra_data: # For TheHive
  elasticsearch_data: # For TheHive and Cortex
  minio_data: # For TheHive
  portainer_data: # For Portainer
  kasm_data: # For Kasm Workspaces
  redis_data: # For Redis persistence
  redis_opencti_data: # For OpenCTI Redis
  redis_openbas_data: # For OpenBAS Redis
  rabbitmq_opencti_data: # For OpenCTI RabbitMQ
  rabbitmq_openbas_data: # For OpenBAS RabbitMQ
  s3_opencti_data: # For OpenCTI S3
  s3_openbas_data: # For OpenBAS S3

services:
  # === Portainer for container management ===
  portainer:
    image: portainer/portainer-ce:latest
    container_name: ${COMPOSE_PROJECT_NAME}_portainer
    restart: unless-stopped
    ports:
      - "${PORTAINER_AGENT_PORT}:8000"
      - "${PORTAINER_PORT}:9000"
      - "${PORTAINER_HTTPS_PORT}:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    networks:
      - default
    profiles:
      - management
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # === GRR MySQL Database ===
  grr-db:
    image: mysql:8.2
    container_name: ${COMPOSE_PROJECT_NAME}_grr-db
    hostname: mysql-host
    command:
      - --max_allowed_packet=40M
      - --log_bin_trust_function_creators=1
      - --innodb_redo_log_capacity=167772160
      - --innodb_log_file_size=2500M
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
      - MYSQL_DATABASE=grr
      - MYSQL_USER=grr
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
    volumes:
      - db_data:/var/lib/mysql:rw
      - ./secrets/mysql_root_password:/run/secrets/mysql_root_password:ro
      - ./secrets/mysql_password:/run/secrets/mysql_password:ro
    ports:
      - "${GRR_DB_PORT}:3306"
    networks:
      - default
    profiles:
      - grr-backend
      - databases
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "grr", "-p$$(cat /run/secrets/mysql_password)"]
      interval: 5s
      timeout: 5s
      retries: 10

  # === GRR Components ===
  grr-admin-ui:
    image: ghcr.io/google/grr:latest
    container_name: ${COMPOSE_PROJECT_NAME}_grr-admin-ui
    hostname: admin-ui
    depends_on:
      grr-db:
        condition: service_healthy
      fleetspeak-admin:
        condition: service_started
    volumes:
      - ./grr_configs:/configs/
      - client_installers:/client_installers
    ports:
      - "${GRR_ADMIN_UI_PORT}:8000"
    networks:
      - default
    profiles:
      - grr-frontend
      - frontends
      - all
    security_opt:
      - no-new-privileges:true
    entrypoint: [
      "/bin/bash",
      "-c",
      "/configs/server/repack_clients.sh && grr_server -component admin_ui -config /configs/server/grr.server.yaml --verbose"
    ]
    healthcheck:
      test: "/configs/healthchecks/grr-admin-ui.sh"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  grr-fleetspeak-frontend:
    image: ghcr.io/google/grr:latest
    container_name: ${COMPOSE_PROJECT_NAME}_grr-fleetspeak-frontend
    hostname: grr-fleetspeak-frontend
    depends_on:
      grr-db:
        condition: service_healthy
    volumes:
      - ./grr_configs:/configs
    expose:
      - "11111"
    restart: unless-stopped
    networks:
      - default
    profiles:
      - grr-backend
      - backends
      - all
    security_opt:
      - no-new-privileges:true
    command:
      - -component
      - frontend
      - -config
      - /configs/server/grr.server.yaml
      - --verbose

  fleetspeak-admin:
    image: ghcr.io/google/fleetspeak:latest
    container_name: ${COMPOSE_PROJECT_NAME}_fleetspeak-admin
    hostname: fleetspeak-admin
    depends_on:
      grr-db:
        condition: service_healthy
    networks:
      - default
    profiles:
      - grr-backend
      - backends
      - all
    security_opt:
      - no-new-privileges:true
    expose:
      - "4444"
    volumes:
      - ./grr_configs:/configs
    entrypoint: [
      "server",
      "-components_config",
      "/configs/server/textservices/admin.components.config",
      "-services_config",
      "/configs/server/grr_frontend.service",
      "-alsologtostderr",
      "-v",
      "1000"
    ]

  fleetspeak-frontend:
    image: ghcr.io/google/fleetspeak:latest
    container_name: ${COMPOSE_PROJECT_NAME}_fleetspeak-frontend
    hostname: fleetspeak-frontend
    depends_on:
      grr-db:
        condition: service_healthy
    networks:
      - default
    profiles:
      - grr-backend
      - backends
      - all
    security_opt:
      - no-new-privileges:true
    expose:
      - "4443"
      - "10000"
    volumes:
      - ./grr_configs:/configs
    entrypoint: [
      "server",
      "-components_config",
      "/configs/server/textservices/frontend.components.config",
      "-services_config",
      "/configs/server/grr_frontend.service",
      "-alsologtostderr",
      "-v",
      "1000"
    ]

  grr-worker:
    image: ghcr.io/google/grr:latest
    container_name: ${COMPOSE_PROJECT_NAME}_grr-worker
    volumes:
      - ./grr_configs:/configs
    hostname: grr-worker
    depends_on:
      grr-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - default
    profiles:
      - grr-backend
      - backends
      - all
    security_opt:
      - no-new-privileges:true
    command:
      - -component
      - worker
      - -config
      - /configs/server/grr.server.yaml
      - --verbose

  # === TheHive Components ===
  cassandra:
    image: 'cassandra:latest'
    container_name: ${COMPOSE_PROJECT_NAME}_cassandra
    hostname: cassandra
    mem_limit: ${CASSANDRA_MEM_LIMIT}
    ports:
      - "${CASSANDRA_PORT}:9042"
    environment:
      - MAX_HEAP_SIZE=${CASSANDRA_MAX_HEAP_SIZE}
      - HEAP_NEWSIZE=${CASSANDRA_HEAP_NEWSIZE}
      - CASSANDRA_CLUSTER_NAME=TheHive
    volumes:
      - cassandra_data:/var/lib/cassandra
    restart: unless-stopped
    networks:
      - default
    profiles:
      - thehive-backend
      - databases
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "nodetool status | grep -q '^UN'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.16
    container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch
    hostname: elasticsearch
    mem_limit: ${ELASTICSEARCH_MEM_LIMIT}
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
      - "${ELASTICSEARCH_NODES_PORT}:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD_FILE=/run/secrets/elastic_password
      - "ES_JAVA_OPTS=-Xms${ELASTICSEARCH_JVM_HEAP} -Xmx${ELASTICSEARCH_JVM_HEAP}"
      - bootstrap.memory_lock=true
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./secrets/elastic_password:/run/secrets/elastic_password:ro
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - default
    profiles:
      - thehive-backend
      - databases
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  minio:
    image: quay.io/minio/minio:latest
    container_name: ${COMPOSE_PROJECT_NAME}_minio
    hostname: minio
    mem_limit: ${MINIO_MEM_LIMIT}
    command: ["server", "/data", "--console-address", ":9090"]
    environment:
      - MINIO_ROOT_USER_FILE=/run/secrets/minio_root_user
      - MINIO_ROOT_PASSWORD_FILE=/run/secrets/minio_root_password
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9090"
    volumes:
      - minio_data:/data
      - ./secrets/minio_root_user:/run/secrets/minio_root_user:ro
      - ./secrets/minio_root_password:/run/secrets/minio_root_password:ro
    networks:
      - default
    profiles:
      - thehive-backend
      - storage
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  cortex:
    image: thehiveproject/cortex:latest
    container_name: ${COMPOSE_PROJECT_NAME}_cortex
    hostname: cortex
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - job_directory=/tmp/cortex-jobs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /tmp/cortex-jobs:/tmp/cortex-jobs
    ports:
      - "${CORTEX_PORT}:9001"
    networks:
      - default
    profiles:
      - thehive-frontend
      - frontends
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/api/status"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  thehive:
    image: strangebee/thehive:5.2.7-1
    container_name: ${COMPOSE_PROJECT_NAME}_thehive
    hostname: thehive
    depends_on:
      cassandra:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      minio:
        condition: service_healthy
      cortex:
        condition: service_healthy
    mem_limit: ${THEHIVE_MEM_LIMIT}
    ports:
      - "${THEHIVE_PORT}:9000"
    environment:
      - JVM_OPTS=${THEHIVE_JVM_HEAP}
    volumes:
      - ./thehive-application.conf:/etc/thehive/application.conf:ro
    command:
      - --secret-file
      - /run/secrets/thehive_secret
      - "--cql-hostnames"
      - "cassandra"
      - "--index-backend"
      - "elasticsearch"
      - "--es-hostnames"
      - "elasticsearch"
      - "--s3-endpoint"
      - "http://minio:9000"
      - "--s3-access-key-file"
      - "/run/secrets/minio_root_user"
      - "--s3-secret-key-file"
      - "/run/secrets/minio_root_password"
      - "--s3-bucket"
      - "thehive"
      - "--s3-use-path-access-style"
      - "--cortex-hostnames"
      - "cortex"
      - "--cortex-keys-file"
      - "/run/secrets/cortex_api_key"
    secrets:
      - thehive_secret
      - minio_root_user
      - minio_root_password
      - cortex_api_key
    networks:
      - default
    profiles:
      - thehive-frontend
      - frontends
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/status"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s


  # OpenCTI Components
  redis-opencti:
    image: redis:7.0.12
    container_name: ${COMPOSE_PROJECT_NAME}_redis_opencti
    restart: unless-stopped
    volumes:
      - redis_opencti_data:/data
    networks:
      - default
    profiles:
      - opencti
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq-opencti:
    image: rabbitmq:3.12-management
    container_name: ${COMPOSE_PROJECT_NAME}_rabbitmq_opencti
    environment:
      - RABBITMQ_DEFAULT_USER_FILE=/run/secrets/rabbitmq_user
      - RABBITMQ_DEFAULT_PASS_FILE=/run/secrets/rabbitmq_password
    volumes:
      - rabbitmq_opencti_data:/var/lib/rabbitmq
      - ./secrets/rabbitmq_user:/run/secrets/rabbitmq_user:ro
      - ./secrets/rabbitmq_password:/run/secrets/rabbitmq_password:ro
    ports:
      - "${OPENCTI_RABBITMQ_PORT}:5672"
    restart: unless-stopped
    networks:
      - default
    profiles:
      - opencti
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  opencti:
    image: opencti/platform:5.9.6
    container_name: ${COMPOSE_PROJECT_NAME}_opencti
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - APP__PORT=8080
      - APP__BASE_URL=http://localhost:${OPENCTI_PORT}
      - APP__ADMIN__EMAIL=admin@opencti.io
      - APP__ADMIN__PASSWORD_FILE=/run/secrets/opencti_admin_password
      - APP__ADMIN__TOKEN_FILE=/run/secrets/opencti_admin_token
      - APP__APP_LOGS__LOGS_LEVEL=error
      - REDIS__HOSTNAME=redis_opencti
      - REDIS__PORT=6379
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - MINIO__ENDPOINT=minio
      - MINIO__PORT=9000
      - MINIO__USE_SSL=false
      - MINIO__ACCESS_KEY_FILE=/run/secrets/minio_root_user
      - MINIO__SECRET_KEY_FILE=/run/secrets/minio_root_password
      - RABBITMQ__HOSTNAME=rabbitmq_opencti
      - RABBITMQ__PORT=5672
      - RABBITMQ__USERNAME_FILE=/run/secrets/rabbitmq_user
      - RABBITMQ__PASSWORD_FILE=/run/secrets/rabbitmq_password
      - SMTP__HOSTNAME=localhost
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
    ports:
      - "${OPENCTI_PORT}:8080"
    volumes:
      - ./secrets/opencti_admin_password:/run/secrets/opencti_admin_password:ro
      - ./secrets/opencti_admin_token:/run/secrets/opencti_admin_token:ro
      - ./secrets/minio_root_user:/run/secrets/minio_root_user:ro
      - ./secrets/minio_root_password:/run/secrets/minio_root_password:ro
      - ./secrets/rabbitmq_user:/run/secrets/rabbitmq_user:ro
      - ./secrets/rabbitmq_password:/run/secrets/rabbitmq_password:ro
    depends_on:
      - redis-opencti
      - rabbitmq-opencti
      - elasticsearch
      - minio
    restart: unless-stopped
    networks:
      - default
    profiles:
      - opencti
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/graphql"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  worker-opencti:
    image: opencti/worker:5.9.6
    container_name: ${COMPOSE_PROJECT_NAME}_worker_opencti
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN_FILE=/run/secrets/opencti_admin_token
      - WORKER_LOG_LEVEL=error
    volumes:
      - ./secrets/opencti_admin_token:/run/secrets/opencti_admin_token:ro
    depends_on:
      - opencti
    deploy:
      mode: replicated
      replicas: 3
    restart: unless-stopped
    networks:
      - default
    profiles:
      - opencti
      - all
    security_opt:
      - no-new-privileges:true

  connector-export-file-stix:
    image: opencti/connector-export-file-stix:5.9.6
    container_name: ${COMPOSE_PROJECT_NAME}_connector-export-file-stix
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN_FILE=/run/secrets/opencti_admin_token
      - CONNECTOR_ID_FILE=/run/secrets/opencti_connector_export_file_stix_id
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileStix2
      - CONNECTOR_SCOPE=application/json
      - CONNECTOR_CONFIDENCE_LEVEL=15
      - CONNECTOR_LOG_LEVEL=info
    volumes:
      - ./secrets/opencti_admin_token:/run/secrets/opencti_admin_token:ro
      - ./secrets/opencti_connector_export_file_stix_id:/run/secrets/opencti_connector_export_file_stix_id:ro
    restart: unless-stopped
    depends_on:
      - opencti
    networks:
      - default
    profiles:
      - opencti
      - all
    security_opt:
      - no-new-privileges:true

  connector-export-file-csv:
    image: opencti/connector-export-file-csv:5.9.6
    container_name: ${COMPOSE_PROJECT_NAME}_connector-export-file-csv
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN_FILE=/run/secrets/opencti_admin_token
      - CONNECTOR_ID_FILE=/run/secrets/opencti_connector_export_file_csv_id
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileCsv
      - CONNECTOR_SCOPE=text/csv
      - CONNECTOR_CONFIDENCE_LEVEL=15
      - CONNECTOR_LOG_LEVEL=info
    volumes:
      - ./secrets/opencti_admin_token:/run/secrets/opencti_admin_token:ro
      - ./secrets/opencti_connector_export_file_csv_id:/run/secrets/opencti_connector_export_file_csv_id:ro
    restart: unless-stopped
    depends_on:
      - opencti
    networks:
      - default
    profiles:
      - opencti
      - all
    security_opt:
      - no-new-privileges:true

  connector-import-file-stix:
    image: opencti/connector-import-file-stix:5.9.6
    container_name: ${COMPOSE_PROJECT_NAME}_connector-import-file-stix
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN_FILE=/run/secrets/opencti_admin_token
      - CONNECTOR_ID_FILE=/run/secrets/opencti_connector_import_file_stix_id
      - CONNECTOR_TYPE=INTERNAL_IMPORT_FILE
      - CONNECTOR_NAME=ImportFileStix
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=true
      - CONNECTOR_SCOPE=application/json,text/xml
      - CONNECTOR_AUTO=true
      - CONNECTOR_CONFIDENCE_LEVEL=15
      - CONNECTOR_LOG_LEVEL=info
    volumes:
      - ./secrets/opencti_admin_token:/run/secrets/opencti_admin_token:ro
      - ./secrets/opencti_connector_import_file_stix_id:/run/secrets/opencti_connector_import_file_stix_id:ro
    restart: unless-stopped
    depends_on:
      - opencti
    networks:
      - default
    profiles:
      - opencti
      - all
    security_opt:
      - no-new-privileges:true

  # OpenBAS Components
  redis-openbas:
    image: redis:7.0.12
    container_name: ${COMPOSE_PROJECT_NAME}_redis_openbas
    restart: unless-stopped
    volumes:
      - redis_openbas_data:/data
    networks:
      - default
    profiles:
      - openbas
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq-openbas:
    image: rabbitmq:3.12-management
    container_name: ${COMPOSE_PROJECT_NAME}_rabbitmq_openbas
    environment:
      - RABBITMQ_DEFAULT_USER_FILE=/run/secrets/rabbitmq_user
      - RABBITMQ_DEFAULT_PASS_FILE=/run/secrets/rabbitmq_password
    volumes:
      - rabbitmq_openbas_data:/var/lib/rabbitmq
      - ./secrets/rabbitmq_user:/run/secrets/rabbitmq_user:ro
      - ./secrets/rabbitmq_password:/run/secrets/rabbitmq_password:ro
    ports:
      - "${OPENBAS_RABBITMQ_PORT}:5672"
    restart: unless-stopped
    networks:
      - default
    profiles:
      - openbas
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  openbas:
    image: filigran/openbas:1.0.0
    container_name: ${COMPOSE_PROJECT_NAME}_openbas
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - APP__PORT=8080
      - APP__BASE_URL=http://localhost:${OPENBAS_PORT}
      - APP__ADMIN__EMAIL=admin@openbas.io
      - APP__ADMIN__PASSWORD_FILE=/run/secrets/openbas_admin_password
      - APP__ADMIN__TOKEN_FILE=/run/secrets/openbas_admin_token
      - APP__APP_LOGS__LOGS_LEVEL=error
      - REDIS__HOSTNAME=redis_openbas
      - REDIS__PORT=6379
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - MINIO__ENDPOINT=minio
      - MINIO__PORT=9000
      - MINIO__USE_SSL=false
      - MINIO__ACCESS_KEY_FILE=/run/secrets/minio_root_user
      - MINIO__SECRET_KEY_FILE=/run/secrets/minio_root_password
      - RABBITMQ__HOSTNAME=rabbitmq_openbas
      - RABBITMQ__PORT=5672
      - RABBITMQ__USERNAME_FILE=/run/secrets/rabbitmq_user
      - RABBITMQ__PASSWORD_FILE=/run/secrets/rabbitmq_password
      - SMTP__HOSTNAME=localhost
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
    ports:
      - "${OPENBAS_PORT}:8080"
    volumes:
      - ./secrets/openbas_admin_password:/run/secrets/openbas_admin_password:ro
      - ./secrets/openbas_admin_token:/run/secrets/openbas_admin_token:ro
      - ./secrets/minio_root_user:/run/secrets/minio_root_user:ro
      - ./secrets/minio_root_password:/run/secrets/minio_root_password:ro
      - ./secrets/rabbitmq_user:/run/secrets/rabbitmq_user:ro
      - ./secrets/rabbitmq_password:/run/secrets/rabbitmq_password:ro
    depends_on:
      - redis-openbas
      - rabbitmq-openbas
      - elasticsearch
      - minio
    restart: unless-stopped
    networks:
      - default
    profiles:
      - openbas
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/graphql"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  worker-openbas:
    image: filigran/openbas-worker:1.0.0
    container_name: ${COMPOSE_PROJECT_NAME}_worker_openbas
    environment:
      - OPENBAS_URL=http://openbas:8080
      - OPENBAS_TOKEN_FILE=/run/secrets/openbas_admin_token
      - WORKER_LOG_LEVEL=error
    volumes:
      - ./secrets/openbas_admin_token:/run/secrets/openbas_admin_token:ro
    depends_on:
      - openbas
    deploy:
      mode: replicated
      replicas: 3
    restart: unless-stopped
    networks:
      - default
    profiles:
      - openbas
      - all
    security_opt:
      - no-new-privileges:true

  # Integration helper
  integration-api:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_integration-api
    restart: unless-stopped
    volumes:
      - ./integrations:/usr/share/nginx/html:ro
      - ./configs/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${INTEGRATION_API_PORT}:80"
    networks:
      - default
    profiles:
      - integration
      - frontends
      - all
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/status"]
      interval: 30s
      timeout: 5s
      retries: 3

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password
  mysql_password:
    file: ./secrets/mysql_password
  elastic_password:
    file: ./secrets/elastic_password
  minio_root_user:
    file: ./secrets/minio_root_user
  minio_root_password:
    file: ./secrets/minio_root_password
  thehive_secret:
    file: ./secrets/thehive_secret
  cortex_api_key:
    file: ./secrets/cortex_api_key
  opencti_admin_password:
    file: ./secrets/opencti_admin_password
  opencti_admin_token:
    file: ./secrets/opencti_admin_token
  openbas_admin_password:
    file: ./secrets/openbas_admin_password
  openbas_admin_token:
    file: ./secrets/openbas_admin_token
  rabbitmq_user:
    file: ./secrets/rabbitmq_user
  rabbitmq_password:
    file: ./secrets/rabbitmq_password
  opencti_connector_export_file_stix_id:
    file: ./secrets/opencti_connector_export_file_stix_id
  opencti_connector_export_file_csv_id:
    file: ./secrets/opencti_connector_export_file_csv_id
  opencti_connector_export_file_txt_id:
    file: ./secrets/opencti_connector_export_file_txt_id
  opencti_connector_import_file_stix_id:
    file: ./secrets/opencti_connector_import_file_stix_id
  opencti_connector_import_document_id:
    file: ./secrets/opencti_connector_import_document_id
